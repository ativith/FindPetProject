import React, { useState } from "react";
import { View, Text, StyleSheet, Alert, TextInput } from "react-native";
import UploadImage from "../‡∏µuiverse/uploadImage";
import IconButton from "../components/IconButton";
import { KeyboardAwareScrollView } from "react-native-keyboard-aware-scroll-view";
import * as ImagePicker from "expo-image-picker";
import Button from "../components/Button";
import { supabase } from "../lib/supabase";
function AlertFormScreen() {
  const [image, setImage] = useState(null);
  const [description, setDescription] = useState("");
  const pickImage = async () => {
    // No permissions request is necessary for launching the image library

    let result = await ImagePicker.launchImageLibraryAsync({
      mediaTypes: ["images"],
      allowsEditing: true,
      aspect: [4, 3],
      quality: 1,
    });

    if (!result.canceled) {
      const selectedUri = result.assets[0].uri;
      setImage(selectedUri);
    }
  };
  async function submitInfo() {
    console.log("‡∏Å‡∏î‡∏î‡πÄ‡πÄ‡∏•‡πâ‡∏ß");
    if (!image || !description) {
      Alert.alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô");
      return;
    }
    try {
      const {
        data: { user },
      } = await supabase.auth.getUser();
      if (!user) {
        alert("‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô");
        return;
      }
      const fileExt = image.split(".").pop();
      const fileName = `photo_${Date.now()}.${fileExt}`;
      const arrayBuffer = await fetch(image).then((res) => res.arrayBuffer());

      //upload to bucket
      const { data, error: uploadError } = await supabase.storage
        .from("imagesOfAlert")
        .upload(fileName, arrayBuffer, {
          contentType: "image/jpeg",
          metadata: {
            //‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡∏ó‡∏µ‡πà‡πÄ‡πÄ‡∏ô‡∏ö‡πÑ‡∏õ‡∏Å‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î ‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô policy
            owner: user.id, // ‡∏ö‡∏≠‡∏Å‡∏ß‡πà‡∏≤‡πÉ‡∏Ñ‡∏£‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏à‡πâ‡∏≤‡∏Ç‡∏≠‡∏á
            description: "My photo", // ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
          },
        });

      if (uploadError) {
        throw uploadError;
      }

      // ‡∏î‡∏∂‡∏á public URL from bucket ‡∏°‡∏≤‡πÉ‡∏ä‡πâ
      const publicUrl = supabase.storage
        .from("imagesOfAlert")
        .getPublicUrl(fileName).data.publicUrl;
      console.log(publicUrl);
      console.log(user.id);
      const { error } = await supabase.from("alert").insert([
        {
          user_id: user.id,
          image_url: publicUrl,
          description: description,
        },
      ]);

      if (error) {
        console.error("‚ùå Insert error:", error);
        alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: " + error.message);
      } else {
        alert("‚úÖ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      }
    } catch (e) {
      console.error("üî• Exception caught:", e);
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö: " + e.message);
    }
  }
  return (
    <View>
      <KeyboardAwareScrollView>
        <UploadImage picture={image}>
          <IconButton
            icon="camera"
            title="choose the image"
            size={15}
            color="black"
            onPress={pickImage}
            style={{
              position: "absolute",
              top: 10,
              right: 10,
            }}
          />
        </UploadImage>
        <TextInput
          style={styles.textbox}
          multiline={true} // ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏´‡∏•‡∏≤‡∏¢‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
          numberOfLines={4} // ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 4 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
          placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà..."
          value={description}
          onChangeText={setDescription}
          textAlignVertical="top" // ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏ö‡∏ô
        />
      </KeyboardAwareScrollView>
      <Button title="submit" onPress={submitInfo} />
    </View>
  );
}

export default AlertFormScreen;
const styles = StyleSheet.create({
  textbox: {
    height: 100, // ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 4 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î
    borderWidth: 1,
    borderColor: "#ccc",
    borderRadius: 8,
    padding: 12,
    fontSize: 16,
    backgroundColor: "#fff",
  },
});
